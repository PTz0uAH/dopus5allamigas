Experimental fork of DOpus5, NOT a port but an adaptation of the source.

Once upon a time the "freed" Dopous5-source toolchain "migrated" from
the original SASC toolchain to GCC toolchain.

The Amiga-gcc toolchain provided by Bebbo produced proper binaries on
non-Termux platforms like WSL.. Msys2, Cygwin and real machines..

Our goal is to create ("Termuxify"), on-device from a native Termux environment,
a DOpus hdf-image which can easily be tested with "termuxified" Amiga emulators
Amiberry and FS-UAE and runs also with vAmigaWeb and of course Uae4arm-apk on
the regular Android side.

To be able to build the greatest public-domain filemanager/WB-replacement
for Amiga with an alternative toolchain like VBCC/VASM/VLINK, some changes
in the sources are probably needed hence this initiative..

For obvious reasons (time) it is not my intention to comment every change or even
use a shipload of conditional defines to keep the source compile on other
Amiga-ish flavoured systems too.. if it works with the VBCC toolchain then
porting to other Amiga-ish systems should be possible too..

It started with adapting the Amiga-gcc (tmx) toolchain to produce, instead of
the full (unbuildable on aarch64) "old-cow" GNU binutils, the VBCC toolchain
which produces less demanding binaries for the Amiga..

All done with in the back of my mind the real Amiga's which are not expanded
to the max like those inside emulated Amiga environments..

Of course "native building" inside the Amiga emulated/real machine is somewhat more
genuine and "oldskool" but crosscompiling might be a whole lot faster, even
on-device.

As Termux-app can be build from inside a Termux session, I vastly believe some
degree of circular preservationalism within an educational context is not only wise
but also an "ueber-fun" thing to do.. to keep the momentum going IYKWIM!

With kind regards,

PTz0uAH

Please read the original developer info below for more information..
/***************************************************************************

 Directory Opus 5
 Original APL release version 5.82
 Copyright 1993-2012 Jonathan Potter & GP Software
 Copyright 2012-2013 DOPUS5 Open Source Team

 This program is free software; you can redistribute it and/or
 modify it under the terms of the AROS Public License version 1.1.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 AROS Public License for more details.

 The release of Directory Opus 5 under the APL in NO WAY affects
 the existing commercial status of Directory Opus for Windows.

 For more information on Directory Opus for Windows please see:
 http://www.gpsoft.com.au

 Directory Opus 5 Support Site:  http://sf.net/p/dopus5allamigas/

***************************************************************************/

Directory Opus 5 is hereby released as free software under the AROS PUBLIC
LICENSE (APL). Please READ this license (see COPYING file) and make sure you
understand the terms and conditions of this license.

This release was made possible by a power2people.org bounty
(http://www.power2people.org/projects/profile/64) - many thanks to the
contributors and to Olaf Schönweiß for organising this.

Please note:

Directory Opus is a registered trademark of GP Software.

GP Software hereby grants a limited licence for use of this trademark in 
relation to software derived from this source code, under the terms of the
APL, running on "Amigoid" platforms such as AROS, AmigaOS and MorphOS only.
The use of the Directory Opus trademark is restricted to these platforms; it
is expressly forbidden to make use of this trademark in relation to software
compiled and/or written for any other platform including Windows and MacOSX.

The release of Directory Opus 5 under the APL in NO WAY affects the existing
commercial status of Directory Opus for Windows.

For more information on Directory Opus for Windows please see:

http://www.gpsoft.com.au

Directory Opus 5 (the last commercial release was 5.82) was compiled under
SAS/C 6. Compilation with other compilers is certainly possible, but it is
left to the individual to make any changes necessary. Note that a small amount
of 68000 assembly code is also used; this would need to be converted to C/C++
before compilation on non-68000 platforms could be possible.

Jonathan Potter
GP Software
November 29, 2012
